/// <reference types="node" />
import { Event as SentryEvent } from '@sentry/types';
import * as http from 'http';
export interface NextRequest extends http.IncomingMessage {
    cookies: Record<string, string>;
    url: string;
    query: {
        [key: string]: string;
    };
    headers: {
        [key: string]: string;
    };
    body: string | {
        [key: string]: unknown;
    };
}
/**
 * Do the monkeypatching and wrapping necessary to catch errors in page routes and record transactions for both page and
 * API routes.
 */
export declare function instrumentServer(): void;
/**
 * Harvest specific data from the request, and add it to the event.
 *
 * @param event The event to which to add request data
 * @param req The request whose data is being added
 * @returns The modified event
 */
export declare function addRequestDataToEvent(event: SentryEvent, req: NextRequest): SentryEvent;
//# sourceMappingURL=instrumentServer.d.ts.map